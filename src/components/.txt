import React, { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import { addCategoryAsync, addSubCategory, getCategoriesAsync } from '../../../Redux/Actions/categoryAction';
import Spinner from '../../../components/Spinner'
import toast from 'react-hot-toast'
import { reset } from '../../../Redux/Slices/categorySlice';

const AddSubCategory = () => {
  const [categoryId,setCategoryId]=useState("")
  // State for form data
  const [formData, setFormData] = useState({
    name: ''
    // category: '', // Change from array to single file
  });

  // Destructuring from form data
  const { name } = formData;

  // Redux dispatch function
  const dispatch = useDispatch();

  // Navigate function from react-router-dom
  const navigate = useNavigate();

  const {categories, isLoading,isSuccess, isError, message } = useSelector((state) => state.category);

  useEffect(() => {
    dispatch(getCategoriesAsync());
}, [dispatch]);

  // useEffect to handle success, error, and reset actions
  useEffect(() => {
    if (isError) {
      toast.error(message);
    }
    if (isSuccess) {
      toast.success(message);
      dispatch(reset());
      // navigate('/admin-dashboard');
    }
    if (isError) {
      dispatch(reset());
    }
  }, [isError, isSuccess, message, dispatch, navigate]);

  // Function to handle changes in the form inputs
  const onChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

 

  // Function to handle form submission
  const handleSubmit = async (e) => {
    e.preventDefault();

    const formDataWithName= new FormData();
    formDataWithName.append('name', name);
    // formDataWithFile.append('category', category);

    dispatch(addSubCategory({formDataWithName,categoryId}));
  };

  if(isLoading){
    <Spinner/>
  }

  return (
    <div className='bg-slate-800 text-slate-100 p-8 shadow-lg'>
      <h2 className="text-2xl font-bold mb-4">Add Product</h2>
      <form encType="multipart/form-data" onSubmit={handleSubmit} className="w-full">

      {/* ---input for product category--- */}
      <div className="mb-4">
          <label htmlFor="category" className="block text-sm font-medium">
            Category:   
          </label>
          <select
            id="category"
            name="category"
            value={categoryId}
            onChange={(e)=>setCategoryId(e.target.value)}
            className='mt-1 p-2 block w-full rounded focus:outline-none text-purple-700  border-2 border-purple-700 bg-transparent'
          >
            <option value="">Select Category</option>
            {/* Populate options with fetched categories */}
            {categories?.map((cat) => (
              <option key={cat._id} value={cat._id}>{cat.imageTitle}</option>
            ))}
          </select>
        </div>

        {/* Input for product name */}
        <div className="mb-4">
          <label htmlFor="name" className="block text-sm font-medium">
            Name:
          </label>
          <input
            type="text"
            id="name"
            placeholder='Product Name'
            name="name"
            value={name}
            onChange={onChange}
            className='mt-1 p-2 block w-full rounded focus:outline-none text-purple-800  border-2 border-purple-800 bg-transparent'
          />
        </div>
        
        <div>
          <button
            type="submit"
            className={`py-2 px-4 rounded  bg-slate-400 text-whit`}
          >
            Submit
          </button>
        </div>
      </form>
    </div>
  );
};

export default AddSubCategory;